#########################
#                       #
#      AUTOMATIONS      #
#                       #
#########################


- alias: "SkyBell Motion Detected"
  trigger:
    - platform: state
      entity_id: binary_sensor.skybell_front_door_motion
      to: 'on'
  action:
    - service: notify.home_aephir_bot
      data_template:
        message: "Front Door Motion Detected"

##################
#    Location    #
##################

##################
#__Alarm_Prompt__#

- alias: "Arm the Alarm, Aephir leaves last"
  trigger:
    - platform: state
      entity_id: input_boolean.aephirhome360
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.kristinahome360
        state: 'off'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
  action:
  - service: notify.home_aephir_bot
    data_template:
      message: "The house is empty."
      data:
          inline_keyboard:
          - 'Set alarm:/set_alarm_away, Turn off everything:/all_off'
          - 'Set alarm and turn off everything:/set_alarm_all_off, No action:/removekeyboard'

- alias: "Arm the Alarm, Kristina leaves last"
  trigger:
    - platform: state
      entity_id: input_boolean.kristinahome360
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.aephirhome360
        state: 'off'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
  action:
  - service: notify.ios_kristinas_ipad
    data:
      message: "The house is empty."
      data:
        push:
          badge: 0
          # sound: <SOUND FILE HERE>
          category: "set_alarm" # Needs to match the top level identifier you used in the ios configuration
        # action_data: # Anything passed in action_data will get echoed back to Home Assistant.
        #   entity_id: light.test
        #   my_custom_data: foo_bar

- alias: "Arm the Alarm, Emilie leaves last"
  trigger:
    - platform: state
      entity_id: device_tracker.emilie
      to: 'not_home'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.aephirhome360
        state: 'off'
      - condition: state
        entity_id: input_boolean.kristinahome360
        state: 'off'
  action:

#################
#__iOS Actions__#

- alias: iOS Alarm armed away
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SET_ALARM_AWAY
  action:
  - service: script.turn_on
    entity_id: script.alarm_armed_away

- alias: iOS All off
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: ALL_OFF_NO_ALARM
  action:
  - service: script.turn_on
    entity_id: script.everyone_left_turn_off_everything

- alias: iOS Alarm armed away and all off
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SET_ALARM_AWAY_ALL_OFF
  action:
  - service: script.turn_on
    entity_id: script.everyone_left_turn_off_everything
  - service: script.turn_on
    entity_id: script.alarm_armed_away

- alias: iOS guest mode
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: GUEST_MODE
  action:
  - service: homeassistant.turn_on
    entity_id: input_boolean.guest_mode

#############
#__Notfiy__#

- alias: "Kristina Leave Work" # Message through telegram if Kristina leaves work
  trigger:
    - platform: state
      from: 'Work Kristina'
      to: 'not_home'
      entity_id: device_tracker.meta_kristina
  action:
    service: notify.home_aephir_bot
    data:
      message: "Kristina left work"

- alias: "Kristina Leave Home" # Message through telegram if Kristina leaves home - doesn't work...
  trigger:
    - platform: state
      from: 'home'
      to: 'not_home'
      entity_id: device_tracker.meta_kristina
  action:
    service: notify.home_aephir_bot
    data:
      message: "Kristina left home"

- alias: "Kristina Arrives Home" # Message through Join if Kristina leaves work - doesn't work...
  trigger:
    - platform: state
      from: 'not_home'
      to: 'home'
      entity_id: device_tracker.meta_kristina
  action:
    service: notify.telegram
    data:
      message: "Kristina is home"

- alias: Notify iOS app test
  trigger:
    - platform: state
      from: 'home'
      to: 'not_home'
      entity_id: device_tracker.meta_kristina
  action:
    service: notify.ios_kristinas_iphone
    data:
      message: "You left home... Walden Loves you!"
#      data:
#        push:
#          badge: 5
#          sound: <SOUND FILE HERE>
#          category: "alarm" # Needs to match the top level identifier you used in the ios configuration
#        action_data: # Anything passed in action_data will get echoed back to Home Assistant.
#          entity_id: light.test
#          my_custom_data: foo_bar



###################
#__Input_Boolean__#

- alias: "aephir_home_360" # Turns on the "aephirhome360" input_boolean if Aephir arrives home
  trigger:
    - platform: state
      entity_id: device_tracker.meta_walden
      from: 'not_home'
      to: 'home'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.aephirhome360


- alias: "aephir_not_home_360" # Turns off the "aephirhome360" input_boolean if Aephir leaves home
  trigger:
    - platform: state
      entity_id: device_tracker.meta_walden
      from: 'home'
      to: 'not_home'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.aephirhome360


- alias: "kristina_home_360" # Turns on the "kristinahome360" input_boolean if Kristina arrives home
  trigger:
    - platform: state
      entity_id: device_tracker.meta_kristina
      from: 'not_home'
      to: 'home'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.kristinahome360

- alias: "kristina_not_home_360" # Turns off the "kristinahome360" input_boolean if Kristina leaves home
  trigger:
    - platform: state
      entity_id: device_tracker.meta_kristina
      from: 'home'
      to: 'not_home'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.kristinahome360

- alias: "emilie_home_360" # Turns on the "emiliehome360" input_boolean if Emilie arrives home
  trigger:
    - platform: state
      entity_id: device_tracker.meta_emilie
      from: 'not_home'
      to: 'home'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.emiliehome360

- alias: "emilie_not_home_360" # Turns off the "emiliehome360" input_boolean if Emilie leaves home
  trigger:
    - platform: state
      entity_id: device_tracker.meta_emilie
      from: 'home'
      to: 'not_home'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.emiliehome360

- alias: "naia_home_360" # Turns on the "emiliehome360" input_boolean if Emilie arrives home
  trigger:
    - platform: state
      entity_id: device_tracker.niels_brodys_ipad_2
      from: 'not_home'
      to: 'home'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.naiahome360

- alias: "naia_not_home_360" # Turns off the "emiliehome360" input_boolean if Emilie leaves home
  trigger:
    - platform: state
      entity_id: device_tracker.niels_brodys_ipad_2
      from: 'home'
      to: 'not_home'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.naiahome360

- alias: Someone Arrives Home Boolean # Turns on the "someonehome360" input_boolean if someone arrives home, or guest mode is activated
  trigger:
    - platform: state
      entity_id:
        - input_boolean.aephirhome360
        - input_boolean.kristinahome360
        - input_boolean.guest_mode
  #      - input_boolean.emiliehome360
      from: 'off'
      to: 'on'
#  condition:
#    condition: state
#    entity_id: input_boolean.someonehome360
#    state: 'off'
#  condition:
#    condition: or
#    conditions:
#      - condition: state
#        entity_id: input_boolean.aephirhome360
#        state: 'on'
#      - condition: state
#        entity_id: input_boolean.kristinahome360
#        state: 'on'
#      - condition: state
#        entity_id: input_boolean.emiliehome360
#        state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.someonehome360

- alias: Aephir leaves last # Turns of the "someonehome360" input_boolean if Aephir is last to leave
  trigger:
    - platform: state
      entity_id:
        - input_boolean.aephirhome360
      from: 'on'
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.kristinahome360
        state: 'off'
#      - condition: state
#        entity_id: input_boolean.emiliehome360
#        state: 'off'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.someonehome360

- alias: Kristina leaves last # Turns of the "someonehome360" input_boolean if Kristina is last to leave
  trigger:
    - platform: state
      entity_id:
        - input_boolean.kristinahome360
      from: 'on'
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.aephirhome360
        state: 'off'
#      - condition: state
#        entity_id: input_boolean.emiliehome360
#        state: 'off'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.someonehome360


- alias: Karen iphone guest mode
  trigger:
    - platform: state
      entity_id:
        - device_tracker.karen_iphone_ping
      to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.guest_mode

- alias: Karen iphone guest mode off
  trigger:
    - platform: state
      entity_id:
        - device_tracker.karen_iphone_ping
      to: 'off'
      for:
        minutes: 20
  action:
    - service: notify.home_aephir_bot
      data_template:
        message: "Karen left."
        data:
          inline_keyboard:
          - 'Turn off guest mode:/guest_mode_off, No action:/removekeyboard'
  # action:
  #   service: homeassistant.turn_off
  #   entity_id: input_boolean.guest_mode

- alias: Guest leaves last # Turns of the "someonehome360" input_boolean if guest mode is deactiveatd and no one is home
  trigger:
    - platform: state
      entity_id:
        - input_boolean.guest_mode
      from: 'on'
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.aephirhome360
        state: 'off'
      - condition: state
        entity_id: input_boolean.kristinahome360
        state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.someonehome360

# - alias: Set Door Sensor Status # Z-wave sensor resets to "on" after HASS restart
#   trigger:

- alias: kids_home
  trigger:
    - platform: state
      entity_id: input_boolean.emiliehome360, input_boolean.naiahome360
      to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.kids_home

- alias: kids_not_home
  trigger:
    - platform: state
      entity_id: input_boolean.emiliehome360, input_boolean.naiahome360
      to: 'off'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_boolean.emiliehome360
        state: 'off'
      - condition: state
        entity_id: input_boolean.naiahome360
        state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.kids_home

########################################
#__Location Based Lights and Switches__#

- alias: "Someone arrives home" # Turns on welcome lights when first person arrives home within 1h before sunset
  trigger:
    - platform: state
      entity_id: input_boolean.someonehome360
      from: 'off'
      to: 'on'
  condition:
    condition: sun
    after: sunset
    after_offset: "-01:00:00"
  action:
    service: script.turn_on
    entity_id: scene.welcome_home

- alias: "Everyone left" # Switches of everyting when last person leaves home
  trigger:
    - platform: state
      entity_id: input_boolean.someonehome360
      from: 'on'
      to: 'off'
#  condition:
#    condition: state
#    entity_id: input_boolean.guest_mode
#    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.everyone_left_turn_off_everything

- alias: "Sunrise, Night Light Off" # Turns of the night light at sunrise, if left on for the kids
  trigger:
    - platform: sun
      event: sunrise
#      offset: '+01:00:00'
#  trigger:
#    - platform: numeric_state
#      entity_id: sun.sun
#      value_template: "{{ state.attributes.elevation }}"
#    # Can be a positive or negative number
#      above: 4.5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.kitchen_spots
        state: 'off'
      - condition: state
        entity_id: light.cconservatory
        state: 'off'
  action:
    service: light.turn_off
    entity_id: group.living_room_lightstrip


#############
#__Life360__#

# Kind of annoying, I get notifications about "overdue", then "updated" all the time.

# - alias: Life360 Overdue Update
#   trigger:
#     platform: event
#     event_type: device_tracker.life360_update_overdue
#   action:
#     service: notify.home_aephir_bot
#     data_template:
#       title: Life360 update overdue
#       message: >
#         Update for {{
#           state_attr(trigger.event.data.entity_id, 'friendly_name')
#         }} is overdue.
#
# - alias: Life360 Update Restored
#   trigger:
#     platform: event
#     event_type: device_tracker.life360_update_restored
#   action:
#     service: notify.home_aephir_bot
#     data_template:
#       title: Life360 update restored
#       message: >
#         Update for {{
#           state_attr(trigger.event.data.entity_id, 'friendly_name')
#         }} restored after {{ trigger.event.data.wait }}.

######################
#    Input Select    #
######################

#############
#__iKettle__#

# - alias: Set iKettle Tempereature
#   trigger:
#     - platform: state
#       entity_id: input_select.ikettle_select
#   action:
#     service: script.turn_on
#     data:
#       entity_id: script.ikettle_test
#       temp: YOURTEMP

##################
#    Telegram    #
##################

# - id: 'telegram_espresso_on'
#   alias: turn on espresso machine
#   initial_state: True
#   trigger:
#     - platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/espresso_on'
#         # data: '/espresso_on'
#         # user_id: !secret telegram_chatID_Aephir
#   action:
#     - service: switch.turn_on
#       entity_id: switch.switch
#
- id: 'telegram_espresso_on'
  alias: turn on espresso machine
  initial_state: True
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/espresso_on'
        # data: '/espresso_on'
        # user_id: !secret telegram_chatID_Aephir
  action:
    - service: switch.turn_on
      entity_id: switch.switch

- id: 'telegram_espresso_off'
  alias: turn off espresso machine
  initial_state: True
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/espresso_off'
        # user_id: !secret telegram_chatID_Aephir
  action:
    - service: switch.turn_off
      entity_id: switch.switch

- id: 'telegram_all_lights_off'
  alias: turn off all lights
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/lights_off'
        # user_id: !secret telegram_chatID_Aephir
  action:
    - service: script.turn_on
      entity_id: script.scene_all_lights_off

- id: 'telegram_everything_off'
  alias: turn off everything
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/all_off'
        # user_id: !secret telegram_chatID_Aephir
  action:
    - service: script.turn_on
      entity_id: script.everyone_left_turn_off_everything

- id: 'telegram_alarm_away'
  alias: Arm alarm in away mode
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/set_alarm_away'
        # user_id: !secret telegram_chatID_Aephir
  action:
    - service: script.turn_on
      entity_id: script.alarm_armed_away
      # data:
      #   code: !secret alarm_code

- id: 'telegram_alarm_away_and_all_off'
  alias: Arm alarm in away mode & all off
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/set_alarm_all_off'
        # user_id: !secret telegram_chatID_Aephir
  action:
    - service: script.turn_on
      entity_id: script.alarm_armed_away
    - service: script.turn_on
      entity_id: script.everyone_left_turn_off_everything

- id: 'telegram_speak_to_home'
  alias: Speak to the home
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/say'
        # user_id: !secret telegram_chatID_Aephir
  action:
  - service: tts.google_say
    data_template:
      entity_id: media_player.living_room
      message: "{{ ' '.join(trigger.event.data.args) }}"

- id: 'telegram_guest_mode_off'
  alias: Turn off guest mode
  trigger:
    - platform: event
      event_type: telegram_command
      # event_type: telegram_command
      event_data:
        command: '/guest_mode_off'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.guest_mode

################
#    Themes    #
################

- alias: 'Set HA theme for day and night'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sun.sun
      to: above_horizon
    - platform: state
      entity_id: sun.sun
      to: below_horizon
  action:
    - service_template: frontend.set_theme
      data_template:
        name: >
          {% if (states.sun.sun.state == "above_horizon") %}
            default
          {% else %}
            midnight
          {% endif %}

##########################################
#    Kustom (KWGT) Widget Automaitons    #
##########################################

- alias: kwgt kitchen lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_kitchen_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.kitchen_lights

- alias: kwgt kitchen lights off
  trigger:
    platform: webhook
    webhook_id: kwgt_kitchen_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.kitchen_lights

- alias: kwgt dining room lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_dining_room_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.dining_room_lights

- alias: kwgt dining room off
  trigger:
    platform: webhook
    webhook_id: kwgt_dining_room_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.dining_room_lights

- alias: kwgt conservatory lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_conservatory_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.conservatory_lights

- alias: kwgt conservatory off
  trigger:
    platform: webhook
    webhook_id: kwgt_conservatory_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.conservatory_lights

- alias: kwgt bedroom lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_bedroom_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.bedroom

- alias: kwgt bedroom off
  trigger:
    platform: webhook
    webhook_id: kwgt_bedroom_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.bedroom

- alias: kwgt baby room lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_baby_room_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.baby_room

- alias: kwgt baby room off
  trigger:
    platform: webhook
    webhook_id: kwgt_baby_room_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.baby_room

- alias: kwgt entrance lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_entrance_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.entrance_lights

- alias: kwgt entrance lights off
  trigger:
    platform: webhook
    webhook_id: kwgt_entrance_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.entrance_lights

- alias: kwgt wine wine cellar lights on
  trigger:
    platform: webhook
    webhook_id: kwgt_wine_cellar_lights_on
  action:
    - service: homeassistant.turn_on
      entity_id: light.wine_cellar_lights

- alias: kwgt wine wine cellar lights off
  trigger:
    platform: webhook
    webhook_id: kwgt_wine_cellar_lights_off
  action:
    - service: homeassistant.turn_off
      entity_id: light.wine_cellar_lights

# - alias: kwgt last turned on increase brightness tasker
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_brightness_up
#   action:
#     - service:
#       data_template:
#       entity_id: >-
#         {%- if (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.kitchen_lights == 'on') -%}
#         light.kitchen_lights
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.dining_room_lights == 'on') -%}
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.conservatory_lights == 'on') -%}
#         light.conservatory_lights
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.bedroom == 'on') -%}
#         light.bedroom
#         {%- endif -%}
#         brightness: '{{states.($entity_id).attributes.brightness + 10}}'
#
# - alias: last turned on decrease brightness tasker
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_brightness_down
#   action:
#     - service:
#       data_template:
#       entity_id: >-
#         {%- if (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.kitchen_lights == 'on') -%}
#         light.kitchen_lights
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.dining_room_lights == 'on') -%}
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.conservatory_lights == 'on') -%}
#         light.conservatory_lights
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.bedroom == 'on') -%}
#         light.bedroom
#         {%- endif -%}
#         brightness: '{{states.($entity_id).attributes.brightness - 10}}'

# - alias: last changed light tasker
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_brightness_down
#   action:
#     - service:
#       data_template:
#       entity_id: >-
#         {%- if (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.kitchen_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.kitchen_lights == 'on') -%}
#         light.kitchen_lights
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.dining_room_lights == 'on') -%}
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.conservatory_lights == 'on') -%}
#         light.conservatory_lights
#         {%- elif (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.kitchen_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) > (as_timestamp(now()) - as_timestamp(states.light.dining_room_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.light.conservatory_lights.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.baby_room.last_changed)) and (as_timestamp(now()) - as_timestamp(states.light.bedroom.last_changed)) < (as_timestamp(now()) - as_timestamp(states.entrance_lights.last_changed)) and (states.light.bedroom == 'on') -%}
#         light.bedroom
#         {%- endif -%}

- alias: kwgt espresso on
  trigger:
    platform: webhook
    webhook_id: kwgt_espresso_on
  action:
    - service: homeassistant.turn_on
      entity_id: switch.switch

- alias: kwgt espresso off
  trigger:
    platform: webhook
    webhook_id: kwgt_espresso_off
  action:
    - service: homeassistant.turn_off
      entity_id: switch.switch

- alias: kwgt fountain on
  trigger:
    platform: webhook
    webhook_id: kwgt_fountain_on
  action:
    - service: homeassistant.toggle
      entity_id: switch.fountain

- alias: kwgt fountain off
  trigger:
    platform: webhook
    webhook_id: kwgt_fountain_off
  action:
    - service: homeassistant.turn_off
      entity_id: switch.fountain
#
# - alias: kwgt fume hood power
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_fume_hood_power
#   action:
#     - service:
#       domain: remote
#       action: send_command
#       entity_id: remote.kitchen_remote
#       data:
#         command:
#           - 'fume_hood_power'
#
# - alias: kwgt fume hood lights
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_fume_hood_lights
#   action:
#     - service:
#       domain: remote
#       action: send_command
#       entity_id: remote.kitchen_remote
#       data:
#         command:
#           - 'fume_hood_lights'
#
# - alias: kwgt fume hood increase power
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_fume_hood_increase
#   action:
#     - service:
#       domain: remote
#       action: send_command
#       entity_id: remote.kitchen_remote
#       data:
#         command:
#           - 'fume_hood_increase'
#
# - alias: kwgt fume hood decrease power
#   trigger:
#     platform: webhook
#     webhook_id: kwgt_fume_hood_decrease
#   action:
#     - service:
#       domain: remote
#       action: send_command
#       entity_id: remote.kitchen_remote
#       data:
#         command:
#           - 'fume_hood_decrease'


#######################
#    Homekit Start    #
#######################

- alias: 'Start HomeKit'
  trigger:
    - platform: homeassistant
      event: start
  action:
    - delay: 00:02  # Waits 2 minutes
    - service: homekit.start


#############################
#    Export history data    #
#############################

# - alias: sensor_values_to_file
#   initial_state: True
#   trigger:
#     - platform: time
#       minutes: '/5'
#       seconds: 00
#   action:
#     - service: notify.filenotify
#       data_template:
#         message: ", {{ states.sensor.outside_air_intake_temperature.state }},{{ states.sensor.dark_sky_temperature.state }},{{ states.sensor.dark_sky_humidity.state }},{{ states.sensor.dark_sky_cloud_coverage.state }},{{ states.sensor.dark_sky_uv_index.state }},{{ states.sensor.dark_sky_wind_speed.state }},{{now().strftime("%Y%m%d-%H%M%S")}}"

################
#    System    #
################
# https://philhawthorne.com/ha-dockermon-use-home-assistant-to-monitor-start-or-stop-docker-containers/

- alias: Alert when a critical container goes offline
  initial_state: True
  trigger:
    - platform: state
      entity_id: switch.mqtt, switch.duckdns, switch.letsencrypt, switch.mariadb, switch.syncthing, switch.appdaemon, switch.nodered
      to: 'off'
      for:
        minutes: 5
  condition:
    condition: and
    conditions:
      # Only send this once per hour
      - condition: template
        value_template: >
          {% if states.automation.alert_when_a_critical_container_goes_offline.last_triggered is not none %}
            {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.alert_when_a_critical_container_goes_offline.attributes.last_triggered) | int > 3600 %} true {% else %} false
            {% endif %}
          {% else %}
          false
          {% endif %}
  action:
    - service: notify.home_aephir_bot
      data_template:
        message: 'Docker container for {{ trigger.to_state.name }} is not running. Please check the status of this container as some features may stop functioning.'
        title: Container Alert
    - service: persistent_notification.create
      data_template:
        notification_id: offline_container
        title: Container Offline
        message: >
          Docker container for {{ trigger.to_state.name }} is not running. Please check the status of this container as some features may stop functioning.


###############
#    Alarm    #
###############
# https://github.com/gazoscalvertos/Hass-Custom-Alarm

- id: alarm_armed_away
  alias: '[Alarm] Away Mode Armed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: 'armed_away'
  action:
    - data:
        message: 'Alarm Away Mode Armed'
        target: email/example@gmail.com
      service: notify.pushbullet
    - data:
        message: 'The house alarm has been switched on in away mode. Goodbye'
      service: notify.example_phone_tts

- id: alarm_armed_home
  alias: '[Alarm] Home Mode Armed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: 'armed_home'
  action:
    - data:
        message: 'Alarm Home Mode Armed'
        target: email/example@gmail.com
      service: notify.pushbullet
    - data:
        message: 'The house alarm has been switched on in home mode. Goodnight'
      service: notify.example_phone_tts

- id: alarm_arming_away
  alias: '[Alarm] Away Mode Arming'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: 'pending'
  action:
    - data:
        message: 'House alarm activating, ensure all doors and windows are closed'
      service: notify.example_phone_tts

- id: alarm_disarmed
  alias: '[Alarm] Disarmed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: 'disarmed'
  action:
    - service: notify.pushbullet
      data:
        message: 'Alarm Disabled'
        # target: email/example@gmail.com
    - service: switch.turn_off
      entity_id: switch.siren_switch
    - data:
        message: 'The house alarm has been Deactivated'
      service: notify.example_phone_tts

- id: alarm_triggered
  alias: '[Alarm] Triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: 'triggered'
  action:
    - service: switch.turn_on
      entity_id: switch.siren_switch
    - service: notify.home_aephir_bot
      data:
        message: 'ALARM TRIGGERED!!! {{ states[states.alarm_control_panel.house.attributes.changed_by.split(".")[0]][ states.alarm_control_panel.house.attributes.changed_by.split(".")[1]].name }}'
        # target: email/example@gmail.com
    - service: notify.ios_kristinas_iphone
      data:
        message: 'ALARM TRIGGERED!!! {{ states[states.alarm_control_panel.house.attributes.changed_by.split(".")[0]][ states.alarm_control_panel.house.attributes.changed_by.split(".")[1]].name }}'
        # target: email/example@gmail.com

- id: alarm_warning
  alias: '[Alarm] Warning'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: 'warning'
  action:
    - service: notify.home_aephir_bot
      data:
        message: 'ALARM Warning {{ states[states.alarm_control_panel.house.attributes.changed_by.split(".")[0]][ states.alarm_control_panel.house.attributes.changed_by.split(".")[1]].name }}'
        # target: email/example@gmail.com
    - service: notify.ios_kristinas_iphone
      data:
        message: 'ALARM Warning {{ states[states.alarm_control_panel.house.attributes.changed_by.split(".")[0]][ states.alarm_control_panel.house.attributes.changed_by.split(".")[1]].name }}'
        # target: email/example@gmail.com
        push:
          badge: 5
          category: 'alarm'
    # - service: notify.home_aephir_bot
    #   data:
    #     message: 'Hello, the house alarm has been tripped. Please deactivate'
    # - service: notify.ios_kristinas_iphone
    #   data:
    #     message: 'Hello, the house alarm has been tripped. Please deactivate'


# - alias: '[Alarm] Panic Mode'
#   trigger:
#     platform: state
#     entity_id: alarm_control_panel.house
#     value_template: '{{ state.attributes.panic_mode }}'
#     to: 'ACTIVE'
#   action:
#   - service: notify.home_aephir_bot
#     data:
#       message: 'ALARM Warning {{ states[states.alarm_control_panel.house.attributes.changed_by.split(".")[0]][ states.alarm_control_panel.house.attributes.changed_by.split(".")[1]].name }}'
#       target: email/example@gmail.com
#   - service: notify.ios_kristinas_iphone
#     data:
#       message: 'ALARM Warning {{ states[states.alarm_control_panel.house.attributes.changed_by.split(".")[0]][ states.alarm_control_panel.house.attributes.changed_by.split(".")[1]].name }}'
#       target: email/example@gmail.com

###############################
#__alarm_actions_from_notify__#

- alias: Sound the alarm
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SOUND_ALARM
  action:
    - service: switch.turn_on
      entity_id: switch.siren_switch

###############
#    Alarm    #
###############

- alias: two hours to next alarm
  trigger:
    - platform: webhook
      webhook_id: 2h_to_alarm
  action:
    - delay: '01:45:00'
    - service: switch.turn_on
      entity_id: switch.switch
    - delay: '01:00:00'
    - service: switch.turn_off
      entity_id: switch.switch
#
# - alias: two hours to next alarm
#   trigger:
#     - platform: webhook
#       webhook_id: alarm_time
#   condition:
#     condition: and
#     conditions:
#       - condition: value_template

############################
#    Thermostat updates    #
############################

- id: fibaro_update
  alias: update_fibaro_heat_controller_bathroom
  trigger:
    - platform: time
      minutes: '/5'
      seconds: 00
    - platform: homeassistant
      event: start
    - platform: event
      event_type: call_service
      event_data:
        domain: climate
        service: set_temperature
    - platform: event
      event_type: call_service
      event_data:
        domain: climate
        service: set_operation_mode
  # condition:
  #   - condition: template
  #     value_template: "{{ now().strftime('%d-%m') >= '10-10' or now().strftime('%d-%m') <= '15-04' }}"
  action:
    - service: zwave.refresh_entity
      data:
        entity_id: zwave.fibaro_system_fgt001_heat_controller


# ######################################
# #    Dummy switches for floorplan    #
# ######################################
#
# - alias: 'switch dummy baby room light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.baby_room
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_baby_room
#
# - alias: 'switch dummy baby room light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.baby_room
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_baby_room
#
# - alias: 'switch dummy bedroom light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.bedroom
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_bedroom
#
# - alias: 'switch dummy bedroom light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.bedroom
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_bedroom
#
# - alias: 'switch dummy conservatory couch light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.conservatory_couch
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_conservatory_couch
#
# - alias: 'switch dummy conservatory couch light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.conservatory_couch
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_conservatory_couch
#
# - alias: 'switch dummy conservatory lights on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.conservatory_lights
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_conservatory_lights
#
# - alias: 'switch dummy conservatory lights off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.conservatory_lights
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_conservatory_lights
#
# - alias: 'switch dummy basement entrance light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.basement_entrance_lights
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_basement_entrance_lights
#
# - alias: 'switch dummy basement entrance light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.basement_entrance_lights
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_basement_entrance_lights
#
# - alias: 'switch dummy kitchen spots on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.kitchen_spots
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_kitchen_spots
#
# - alias: 'switch dummy kitchen spots off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.kitchen_spots
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_kitchen_spots
#
# - alias: 'switch dummy living room lightstrip on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.living_room_lightstrip
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_living_room_lightstrip
#
# - alias: 'switch dummy living room lightstrip off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.living_room_lightstrip
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_living_room_lightstrip
#
#
# - alias: 'switch dummy kitchen cabinet light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.kitchen_cabinet_lights
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_kitchen_cabinet
#
# - alias: 'switch dummy kitchen cabinet light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.kitchen_cabinet_lights
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_kitchen_cabinet
#
# - alias: 'switch dummy dining table lights on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.dining_table_lights
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_dining_table
#
# - alias: 'switch dummy dining table lights off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.dining_table_lights
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_dining_table
#
# - alias: 'switch dummy top floor bathroom light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.top_floor_bathroom
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_top_floor_bathroom
#
# - alias: 'switch dummy top floor bathroom light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.top_floor_bathroom
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_top_floor_bathroom
#
# - alias: 'switch dummy TV room light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.tv_room
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_tv_room
#
# - alias: 'switch dummy TV room light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.tv_room
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_tv_room
#
# - alias: 'switch dummy stairway up light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.stairway_up
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_stairway_up
#
# - alias: 'switch dummy stairway up light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.stairway_up
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_stairway_up
#
# - alias: 'switch dummy stairway down light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.stairway_down
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_stairway_down
#
# - alias: 'switch dummy stairway down light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.stairway_down
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_stairway_down
#
# - alias: 'switch dummy wine cellar light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.wine_cellar
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_wine_cellar
#
# - alias: 'switch dummy wine cellar light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.wine_cellar
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_wine_cellar
#
# - alias: 'switch dummy bathroom light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.bathroom
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_bathroom
#
# - alias: 'switch dummy bathroom light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.bathroom
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_bathroom
#
# - alias: 'switch dummy walk-in light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.walk_in_closet
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_walkin_closet
#
# - alias: 'switch dummy walk-in light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.walk_in_closet
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_walkin_closet
#
# - alias: 'switch dummy top floor tv area light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.top_floor_tv_area
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_top_floor_tv_area
#
# - alias: 'switch top floor tv area light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.top_floor_tv_area
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_top_floor_tv_area
#
# - alias: 'switch dummy top floor hallway light on'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.top_floor_hallway
#       from: 'off'
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: input_boolean.light_top_floor_hallway
#
# - alias: 'switch top floor hallway light off'
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: light.top_floor_hallway
#       from: 'on'
#       to: 'off'
#   action:
#     - service: homeassistant.turn_off
#       entity_id: input_boolean.light_top_floor_hallway

##################
#    Doorbell    #
##################

# The delay is currently unacceptable.
# I am using RESTtask plugin with tasker to monitor Skybell app,
# and trigger the "doorbell_day" script through an HTTP POST.
#
# See post #5 here https://community.home-assistant.io/t/tasker-long-lived-access-tokens/69253/4

- alias: 'Doorbell chime test'
  trigger:
    platform: state
    entity_id: binary_sensor.skybell_front_door_button
    to: 'on'
  action:
    service: notify.home_aephir_bot
    data:
      message: "on"
#
# - alias: 'Doorbell chime'
#   trigger:
#     platform: state
#     entity_id: binary_sensor.skybell_front_door_button
#     to: 'on'
#   action:
#     - service: script.turn_on
#       entity_id: script.doorbell_day

# Throgh RESTtask

# - alias: 'Doorbell chime'
#   trigger:
#     platform: webhook
#     webhook_id: restask_doorbell
#   action:
#     - service: script.turn_on
#       entity_id: script.doorbell_day
